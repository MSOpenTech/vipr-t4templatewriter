<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="Shared.template.tt" #>

<#
string entityName = entity.ToObjCInterface();
string fetcherName = entityName + "Fetcher";
string collectionFetcherName = entityName + "CollectionFetcher";
#>

//#import "<#=fetcherName#>.h"
//#import "<#=collectionFetcherName#>.h"
#import "<#=prefix#>Fetchers.h"

@implementation <#=collectionFetcherName#>

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    return [super initWithUrl:urlComponent parent:parent asClass:[<#=prefix + entity.Name#> class]];
}

- (void)add:(<#=prefix + entity.Name#>*)entity callback:(void (^)(<#=prefix + entity.Name#> *<#=entity.Name.ToLowerFirstChar()#>, MSOrcError *error))callback {
	
	return [super add:entity callback:^(id entityAdded, MSOrcError *e) {

        callback(entityAdded,e);
    }];
}

- (<#=prefix + entity.Name#>Fetcher *)getById:(NSString *)_id {

    return [[<#=fetcherName#> alloc] initWithUrl:[[NSString alloc] initWithFormat:@"('%@')" ,_id] parent:self];
}

- (<#=collectionFetcherName#> *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (<#=collectionFetcherName#> *)filter:(NSString *)params{
    [super filter:params];
    
    return self;
}

- (<#=collectionFetcherName#> *)search:(NSString *)params {
    [super search:params];
    
    return self;
}

- (<#=collectionFetcherName#> *)top:(int)value {
    [super top:value];
    
    return self;
}

- (<#=collectionFetcherName#> *)skip:(int)value {
    [super skip:value];
    
    return self;
}

- (<#=collectionFetcherName#> *)expand:(NSString *)value {
    [super expand:value];
    
    return self;
}

- (<#=collectionFetcherName#> *)orderBy:(NSString *)params {
    [super orderBy:params];
    
    return self;
}

- (<#=collectionFetcherName#> *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (<#=collectionFetcherName#> *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

@end

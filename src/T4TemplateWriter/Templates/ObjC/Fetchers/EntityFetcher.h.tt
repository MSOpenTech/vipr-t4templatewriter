<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="Shared.template.tt"#>


<#
string entityName = entity.ToObjCInterface();
string fetcherName = entityName + "Fetcher";     
string baseEntityName = entity.Kind == OdcmClassKind.MediaEntity ? "MSOrcMediaEntityFetcher": "MSOrcEntityFetcher";

GenerateHeaderGuards(fetcherName);

#>

#import <orc.h>
#import "<#=prefix#>Models.h"
#import "<#=baseEntityName#>.h"

<#

GenerateClassForwardDeclarationsForFetcher(entity);
GenerateClassForwardDeclarationsForFetcherDerived(entity);
GenerateClassForwardDeclarationsForFetcherNavProps(entity);

#>
@class <#=entityName#>Operations;


/** <#=fetcherName#>
 *
 */
@interface <#=fetcherName#> : <#=baseEntityName#>

@property (copy, nonatomic, readonly) <#=entityName#>Operations *<#=(entityName+"Operations").ToObjCProperty()#>;

- (instancetype)initWithUrl:(NSString*)urlComponent parent:(id<MSOrcExecutable>)parent;
- (void)readWithCallback:(void (^)(<#=entityName#> *, MSOrcError *))callback;
- (void)update:(<#=entityName#> *)<#=entity.Name.ToObjCIdentifier()#> <# GenerateCallbackParameter(entityName + " *"); #>;
- (void)delete:(void(^)(int status, MSOrcError *))callback;
- (<#=fetcherName#> *)addCustomParametersWithName:(NSString *)name value:(id)value;
- (<#=fetcherName#> *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value;
- (<#=fetcherName#> *)select:(NSString *)params;
- (<#=fetcherName#> *)expand:(NSString *)value;
<#
		
foreach(var prop in entity.NavigationProperties())
{
	if(prop.IsCollection)
	{

#>
@property (strong, nonatomic, readonly, getter=<#=prop.GetGetterString()#>) <#=prop.GetTypeString(true)#>CollectionFetcher *<#=prop.GetPropertyString()#>;

- (<#=prop.GetTypeString(true)#>Fetcher *)<#=prop.GetGetterString()#>ById:(NSString*)identifier;

<#

	}
	else
	{

#>

@property (strong, nonatomic, readonly, getter=<#=prop.GetGetterString()#>) <#=prop.GetTypeString(true)#>Fetcher *<#=prop.GetPropertyString()#>;
<#		
			
	}
}

foreach(var child in entity.Derived)
{

#>
- (<#=child.ToObjCInterface()#>Fetcher *)<#=child.Name.ToObjCIdentifierPrefix("as")#>;	
<#

}

#>

@end

#endif

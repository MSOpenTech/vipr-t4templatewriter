<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseTemplate.m.tt"#>
<#@ output extension="\\" #>
<#=GetCommentHeader()#>
<#
CustomHost host = (CustomHost)Host;
var entity = host.OdcmType.AsOdcmClass();
OdcmModel model = host.Model;
#>

#import "<#=GetPrefix()#>Models.h"

<#=GetImplementationDoc(entity.Name)#>
@implementation <#=GetPrefix() + entity.Name#>	

@synthesize odataType = _odataType;
<#
foreach(var prop in entity.Properties)
{
#>
@synthesize <#=GetName(prop.Name)#> = _<#=GetName(prop.Name)#>;
<#
}
#>

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#<#=model.GetNamespace()#>.<#=entity.Name#>";
	}

	return self;
}

<#
foreach(var prop in entity.Properties)
{
	if(prop.Type is OdcmEnum && !prop.IsCollection){

		var enumProp = host.Model.GetEnumTypes().First(e=> e.Name == prop.Type.Name);
#>
- (void)set<#=prop.Name#>String:(NSString *)value {
<#
		for(var i=1; i <= enumProp.Members.Count; i++)
		{

			string value = enumProp.Members[i -1].Name;

#>

	if ([value isEqualToString:@"<#=value#>"]) {

		self.<#=prop.Name#> = <#=GetPrefix() + "_" + prop.Type.Name + "_" + value#>;
	}
<#
	
		}
#>
}
<#
	}
}

#>

@end
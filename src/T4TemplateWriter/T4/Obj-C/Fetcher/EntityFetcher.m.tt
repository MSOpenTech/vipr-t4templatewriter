<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseTemplate.m.tt"#>
<#@ output extension="\\" #>
<#=GetCommentHeader()#>
<#
CustomHost host = (CustomHost)Host;

OdcmModel model = host.Model;

var entity = host.OdcmType.AsOdcmClass();
var entityName = GetPrefix() + entity.Name;

#>

#import "<#=GetPrefix()#>Fetchers.h"

@implementation <#=entityName#>Fetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[<#=entityName#> class]]) {

		_operations = [[<#=entityName#>Operations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(<#=GetPrefix() + entity.Name#> *<#=entity.Name.ToLowerFirstChar()#>, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}
<#

foreach(var prop in entity.NavigationProperties())
{
	if(prop.IsCollection())
	{
#>

- (<#=GetPrefix() + prop.Type.Name#>CollectionFetcher *)<#=prop.Name.ToLowerFirstChar()#> {

    return [[<#=GetPrefix() + prop.Type.Name#>CollectionFetcher alloc] initWithUrl:@"<#=prop.Name#>" parent:self asClass:[<#=GetPrefix() + prop.Type.Name#> class]];
}

- (<#=GetPrefix() + prop.Type.Name#>Fetcher *)get<#=prop.Name.ToUpperFirstChar()#>ById:(NSString *)id {

    return [[[<#=GetPrefix() + prop.Type.Name#>CollectionFetcher alloc] initWithUrl:@"<#=prop.Name#>" parent:self asClass:[<#=GetPrefix() + prop.Type.Name#> class]] getById:id];
}
<#
	}
	else
	{
#>

- (<#=GetPrefix() + prop.Type.Name#>Fetcher *)<#=prop.Name.ToLowerFirstChar()#> {

	 return [[<#=GetPrefix() + prop.Type.Name#>Fetcher alloc] initWithUrl:@"<#=prop.Name#>" parent:self asClass:[<#=GetPrefix() + prop.Type.Name#> class]];
}
<#		
			
	}
}
foreach(var child in entity.Derived)
{
#>

- (<#=GetPrefix() + child.Name#>Fetcher *)as<#=child.Name.ToUpperFirstChar()#> {

	return [[<#=GetPrefix() +child.Name#>Fetcher alloc] initWithUrl:@"" parent:self asClass:[<#=GetPrefix() + child.Name#> class]];
}
<#

}
#>

@end